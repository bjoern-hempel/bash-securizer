#!/usr/bin/env bash

function printLine {
    local caption="$1"
    local value="$2"
    [ "$caption" != "" ] && caption="$caption:"
    printf '%-'$(expr $titleSpace + $typeSpace)'s %s\n' "$caption" "$value"
}

function printHeader {
    echo ""
    echo "---"
    echo "${1^^}"
    echo "---"
}

function printSuccess {
    local outputFormat=${1:-bash}
    local verbose=${2:-false}
    local typeOutput="${3:-header}"
    local title="$4"
    local hints="${5:-}"
    local warning=${6:-false}
    local textPassed="${7:-Test passed.}"
    local warningText=""

    $verbose && $warning && warningText=" \e[3m(But check the following warnings)\e[0m"
    [ "$title" != "" ] && title="$title:"

    local format='\e[43m' && $warning || format='\e[42m'
    printf '%-'$typeSpace's %-'$titleSpace's '$format'%s\e[0m%s\n' "[$typeOutput]" "$title" "$textPassed" "$warningText"
    $verbose && [ "$hints" != "" ] && [ "$hints" != "false" ] && showLines "$hints"
}

function printWarning {
    printSuccess "$1" "$2" "$3" "$4" "$5" true
}

function printError {
    local outputFormat=${1:-bash}
    local verbose=${2:-false}
    local typeOutput="${3:-header}"
    local title="$4"
    local hints="${5:-}"
    local textPassed="${6:-Test failed.}"

    [ "$title" != "" ] && title="$title:"

    printf '%-'$typeSpace's %-'$titleSpace's \e[41m%s\e[0m\n' "[$typeOutput]" "$title" "$textPassed"
    $verbose && [ "$hints" != "" ] && [ "$hints" != "false" ] && showLines "$hints"
}

function printStandard {
    local title="$1"
    local text="${2:-}"
    [ "$title" != "" ] && title="$title:"

    printf '%-'$titleSpace's %s\n' "$title" "$text"
}

function printBulletItem {
    local texts="${1:-}"

    if [ "$texts" == "" ]; then
        return
    fi

    while read -r text; do
        printf '%-'$(expr $typeSpace + $titleSpace + 1)'s â†’ %s\n' "" "$text"
    done <<< "$texts"
}

function printMultipleStringWithLineNumber {
    local leadingZeros=$(printf "%d" $(echo "$1" | wc -l | xargs) | wc -c | xargs)

    echo "$1" | sed '/^$/d' | awk '{printf "%0'$leadingZeros'd %s\n", NR, $0}'
}

function showLines {
    printBulletItem "$1"
}

